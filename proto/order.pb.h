// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#ifndef PROTOBUF_INCLUDED_order_2eproto
#define PROTOBUF_INCLUDED_order_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "shared.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_order_2eproto 

namespace protobuf_order_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_order_2eproto
namespace proto {
class OrderProto;
class OrderProtoDefaultTypeInternal;
extern OrderProtoDefaultTypeInternal _OrderProto_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::OrderProto* Arena::CreateMaybeMessage<::proto::OrderProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {

enum OrderProto_StateProto {
  OrderProto_StateProto_NEW = 0,
  OrderProto_StateProto_PARTIALLY_FILLED = 1,
  OrderProto_StateProto_FILLED = 2,
  OrderProto_StateProto_CANCELED = 3,
  OrderProto_StateProto_REJECTED = 4,
  OrderProto_StateProto_EXPIRED = 5,
  OrderProto_StateProto_OrderProto_StateProto_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderProto_StateProto_OrderProto_StateProto_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderProto_StateProto_IsValid(int value);
const OrderProto_StateProto OrderProto_StateProto_StateProto_MIN = OrderProto_StateProto_NEW;
const OrderProto_StateProto OrderProto_StateProto_StateProto_MAX = OrderProto_StateProto_EXPIRED;
const int OrderProto_StateProto_StateProto_ARRAYSIZE = OrderProto_StateProto_StateProto_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderProto_StateProto_descriptor();
inline const ::std::string& OrderProto_StateProto_Name(OrderProto_StateProto value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderProto_StateProto_descriptor(), value);
}
inline bool OrderProto_StateProto_Parse(
    const ::std::string& name, OrderProto_StateProto* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderProto_StateProto>(
    OrderProto_StateProto_descriptor(), name, value);
}
enum OrderProto_TypeProto {
  OrderProto_TypeProto_LIMIT = 0,
  OrderProto_TypeProto_MARKET = 1,
  OrderProto_TypeProto_STOP_LOSS = 2,
  OrderProto_TypeProto_STOP_LOSS_LIMIT = 3,
  OrderProto_TypeProto_TAKE_PROFIT = 4,
  OrderProto_TypeProto_TAKE_PROFIT_LIMIT = 5,
  OrderProto_TypeProto_LIMIT_MAKER = 6,
  OrderProto_TypeProto_OrderProto_TypeProto_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderProto_TypeProto_OrderProto_TypeProto_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderProto_TypeProto_IsValid(int value);
const OrderProto_TypeProto OrderProto_TypeProto_TypeProto_MIN = OrderProto_TypeProto_LIMIT;
const OrderProto_TypeProto OrderProto_TypeProto_TypeProto_MAX = OrderProto_TypeProto_LIMIT_MAKER;
const int OrderProto_TypeProto_TypeProto_ARRAYSIZE = OrderProto_TypeProto_TypeProto_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderProto_TypeProto_descriptor();
inline const ::std::string& OrderProto_TypeProto_Name(OrderProto_TypeProto value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderProto_TypeProto_descriptor(), value);
}
inline bool OrderProto_TypeProto_Parse(
    const ::std::string& name, OrderProto_TypeProto* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderProto_TypeProto>(
    OrderProto_TypeProto_descriptor(), name, value);
}
enum OrderProto_TimeInForceProto {
  OrderProto_TimeInForceProto_GFD = 0,
  OrderProto_TimeInForceProto_GTC = 1,
  OrderProto_TimeInForceProto_IOC = 2,
  OrderProto_TimeInForceProto_FOC = 3,
  OrderProto_TimeInForceProto_OrderProto_TimeInForceProto_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderProto_TimeInForceProto_OrderProto_TimeInForceProto_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderProto_TimeInForceProto_IsValid(int value);
const OrderProto_TimeInForceProto OrderProto_TimeInForceProto_TimeInForceProto_MIN = OrderProto_TimeInForceProto_GFD;
const OrderProto_TimeInForceProto OrderProto_TimeInForceProto_TimeInForceProto_MAX = OrderProto_TimeInForceProto_FOC;
const int OrderProto_TimeInForceProto_TimeInForceProto_ARRAYSIZE = OrderProto_TimeInForceProto_TimeInForceProto_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderProto_TimeInForceProto_descriptor();
inline const ::std::string& OrderProto_TimeInForceProto_Name(OrderProto_TimeInForceProto value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderProto_TimeInForceProto_descriptor(), value);
}
inline bool OrderProto_TimeInForceProto_Parse(
    const ::std::string& name, OrderProto_TimeInForceProto* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderProto_TimeInForceProto>(
    OrderProto_TimeInForceProto_descriptor(), name, value);
}
// ===================================================================

class OrderProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OrderProto) */ {
 public:
  OrderProto();
  virtual ~OrderProto();

  OrderProto(const OrderProto& from);

  inline OrderProto& operator=(const OrderProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderProto(OrderProto&& from) noexcept
    : OrderProto() {
    *this = ::std::move(from);
  }

  inline OrderProto& operator=(OrderProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderProto* internal_default_instance() {
    return reinterpret_cast<const OrderProto*>(
               &_OrderProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(OrderProto* other);
  friend void swap(OrderProto& a, OrderProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderProto* New() const final {
    return CreateMaybeMessage<OrderProto>(NULL);
  }

  OrderProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderProto& from);
  void MergeFrom(const OrderProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OrderProto_StateProto StateProto;
  static const StateProto NEW =
    OrderProto_StateProto_NEW;
  static const StateProto PARTIALLY_FILLED =
    OrderProto_StateProto_PARTIALLY_FILLED;
  static const StateProto FILLED =
    OrderProto_StateProto_FILLED;
  static const StateProto CANCELED =
    OrderProto_StateProto_CANCELED;
  static const StateProto REJECTED =
    OrderProto_StateProto_REJECTED;
  static const StateProto EXPIRED =
    OrderProto_StateProto_EXPIRED;
  static inline bool StateProto_IsValid(int value) {
    return OrderProto_StateProto_IsValid(value);
  }
  static const StateProto StateProto_MIN =
    OrderProto_StateProto_StateProto_MIN;
  static const StateProto StateProto_MAX =
    OrderProto_StateProto_StateProto_MAX;
  static const int StateProto_ARRAYSIZE =
    OrderProto_StateProto_StateProto_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StateProto_descriptor() {
    return OrderProto_StateProto_descriptor();
  }
  static inline const ::std::string& StateProto_Name(StateProto value) {
    return OrderProto_StateProto_Name(value);
  }
  static inline bool StateProto_Parse(const ::std::string& name,
      StateProto* value) {
    return OrderProto_StateProto_Parse(name, value);
  }

  typedef OrderProto_TypeProto TypeProto;
  static const TypeProto LIMIT =
    OrderProto_TypeProto_LIMIT;
  static const TypeProto MARKET =
    OrderProto_TypeProto_MARKET;
  static const TypeProto STOP_LOSS =
    OrderProto_TypeProto_STOP_LOSS;
  static const TypeProto STOP_LOSS_LIMIT =
    OrderProto_TypeProto_STOP_LOSS_LIMIT;
  static const TypeProto TAKE_PROFIT =
    OrderProto_TypeProto_TAKE_PROFIT;
  static const TypeProto TAKE_PROFIT_LIMIT =
    OrderProto_TypeProto_TAKE_PROFIT_LIMIT;
  static const TypeProto LIMIT_MAKER =
    OrderProto_TypeProto_LIMIT_MAKER;
  static inline bool TypeProto_IsValid(int value) {
    return OrderProto_TypeProto_IsValid(value);
  }
  static const TypeProto TypeProto_MIN =
    OrderProto_TypeProto_TypeProto_MIN;
  static const TypeProto TypeProto_MAX =
    OrderProto_TypeProto_TypeProto_MAX;
  static const int TypeProto_ARRAYSIZE =
    OrderProto_TypeProto_TypeProto_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TypeProto_descriptor() {
    return OrderProto_TypeProto_descriptor();
  }
  static inline const ::std::string& TypeProto_Name(TypeProto value) {
    return OrderProto_TypeProto_Name(value);
  }
  static inline bool TypeProto_Parse(const ::std::string& name,
      TypeProto* value) {
    return OrderProto_TypeProto_Parse(name, value);
  }

  typedef OrderProto_TimeInForceProto TimeInForceProto;
  static const TimeInForceProto GFD =
    OrderProto_TimeInForceProto_GFD;
  static const TimeInForceProto GTC =
    OrderProto_TimeInForceProto_GTC;
  static const TimeInForceProto IOC =
    OrderProto_TimeInForceProto_IOC;
  static const TimeInForceProto FOC =
    OrderProto_TimeInForceProto_FOC;
  static inline bool TimeInForceProto_IsValid(int value) {
    return OrderProto_TimeInForceProto_IsValid(value);
  }
  static const TimeInForceProto TimeInForceProto_MIN =
    OrderProto_TimeInForceProto_TimeInForceProto_MIN;
  static const TimeInForceProto TimeInForceProto_MAX =
    OrderProto_TimeInForceProto_TimeInForceProto_MAX;
  static const int TimeInForceProto_ARRAYSIZE =
    OrderProto_TimeInForceProto_TimeInForceProto_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TimeInForceProto_descriptor() {
    return OrderProto_TimeInForceProto_descriptor();
  }
  static inline const ::std::string& TimeInForceProto_Name(TimeInForceProto value) {
    return OrderProto_TimeInForceProto_Name(value);
  }
  static inline bool TimeInForceProto_Parse(const ::std::string& name,
      TimeInForceProto* value) {
    return OrderProto_TimeInForceProto_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string market = 3;
  void clear_market();
  static const int kMarketFieldNumber = 3;
  const ::std::string& market() const;
  void set_market(const ::std::string& value);
  #if LANG_CXX11
  void set_market(::std::string&& value);
  #endif
  void set_market(const char* value);
  void set_market(const char* value, size_t size);
  ::std::string* mutable_market();
  ::std::string* release_market();
  void set_allocated_market(::std::string* market);

  // string created_timestamp = 11;
  void clear_created_timestamp();
  static const int kCreatedTimestampFieldNumber = 11;
  const ::std::string& created_timestamp() const;
  void set_created_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_created_timestamp(::std::string&& value);
  #endif
  void set_created_timestamp(const char* value);
  void set_created_timestamp(const char* value, size_t size);
  ::std::string* mutable_created_timestamp();
  ::std::string* release_created_timestamp();
  void set_allocated_created_timestamp(::std::string* created_timestamp);

  // string updated_timestamp = 12;
  void clear_updated_timestamp();
  static const int kUpdatedTimestampFieldNumber = 12;
  const ::std::string& updated_timestamp() const;
  void set_updated_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_updated_timestamp(::std::string&& value);
  #endif
  void set_updated_timestamp(const char* value);
  void set_updated_timestamp(const char* value, size_t size);
  ::std::string* mutable_updated_timestamp();
  ::std::string* release_updated_timestamp();
  void set_allocated_updated_timestamp(::std::string* updated_timestamp);

  // string expiration_timestamp = 13;
  void clear_expiration_timestamp();
  static const int kExpirationTimestampFieldNumber = 13;
  const ::std::string& expiration_timestamp() const;
  void set_expiration_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_expiration_timestamp(::std::string&& value);
  #endif
  void set_expiration_timestamp(const char* value);
  void set_expiration_timestamp(const char* value, size_t size);
  ::std::string* mutable_expiration_timestamp();
  ::std::string* release_expiration_timestamp();
  void set_allocated_expiration_timestamp(::std::string* expiration_timestamp);

  // .proto.UUID order_id = 1;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  private:
  const ::proto::UUID& _internal_order_id() const;
  public:
  const ::proto::UUID& order_id() const;
  ::proto::UUID* release_order_id();
  ::proto::UUID* mutable_order_id();
  void set_allocated_order_id(::proto::UUID* order_id);

  // .proto.UUID author_id = 2;
  bool has_author_id() const;
  void clear_author_id();
  static const int kAuthorIdFieldNumber = 2;
  private:
  const ::proto::UUID& _internal_author_id() const;
  public:
  const ::proto::UUID& author_id() const;
  ::proto::UUID* release_author_id();
  ::proto::UUID* mutable_author_id();
  void set_allocated_author_id(::proto::UUID* author_id);

  // uint64 price = 5;
  void clear_price();
  static const int kPriceFieldNumber = 5;
  ::google::protobuf::uint64 price() const;
  void set_price(::google::protobuf::uint64 value);

  // uint64 size = 6;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // .proto.MarketSideProto side = 4;
  void clear_side();
  static const int kSideFieldNumber = 4;
  ::proto::MarketSideProto side() const;
  void set_side(::proto::MarketSideProto value);

  // .proto.OrderProto.TypeProto type = 8;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  ::proto::OrderProto_TypeProto type() const;
  void set_type(::proto::OrderProto_TypeProto value);

  // uint64 executed_amount = 7;
  void clear_executed_amount();
  static const int kExecutedAmountFieldNumber = 7;
  ::google::protobuf::uint64 executed_amount() const;
  void set_executed_amount(::google::protobuf::uint64 value);

  // .proto.OrderProto.TimeInForceProto tif = 9;
  void clear_tif();
  static const int kTifFieldNumber = 9;
  ::proto::OrderProto_TimeInForceProto tif() const;
  void set_tif(::proto::OrderProto_TimeInForceProto value);

  // .proto.OrderProto.StateProto state = 10;
  void clear_state();
  static const int kStateFieldNumber = 10;
  ::proto::OrderProto_StateProto state() const;
  void set_state(::proto::OrderProto_StateProto value);

  // @@protoc_insertion_point(class_scope:proto.OrderProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr market_;
  ::google::protobuf::internal::ArenaStringPtr created_timestamp_;
  ::google::protobuf::internal::ArenaStringPtr updated_timestamp_;
  ::google::protobuf::internal::ArenaStringPtr expiration_timestamp_;
  ::proto::UUID* order_id_;
  ::proto::UUID* author_id_;
  ::google::protobuf::uint64 price_;
  ::google::protobuf::uint64 size_;
  int side_;
  int type_;
  ::google::protobuf::uint64 executed_amount_;
  int tif_;
  int state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_order_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OrderProto

// .proto.UUID order_id = 1;
inline bool OrderProto::has_order_id() const {
  return this != internal_default_instance() && order_id_ != NULL;
}
inline const ::proto::UUID& OrderProto::_internal_order_id() const {
  return *order_id_;
}
inline const ::proto::UUID& OrderProto::order_id() const {
  const ::proto::UUID* p = order_id_;
  // @@protoc_insertion_point(field_get:proto.OrderProto.order_id)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UUID*>(
      &::proto::_UUID_default_instance_);
}
inline ::proto::UUID* OrderProto::release_order_id() {
  // @@protoc_insertion_point(field_release:proto.OrderProto.order_id)
  
  ::proto::UUID* temp = order_id_;
  order_id_ = NULL;
  return temp;
}
inline ::proto::UUID* OrderProto::mutable_order_id() {
  
  if (order_id_ == NULL) {
    auto* p = CreateMaybeMessage<::proto::UUID>(GetArenaNoVirtual());
    order_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.OrderProto.order_id)
  return order_id_;
}
inline void OrderProto::set_allocated_order_id(::proto::UUID* order_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(order_id_);
  }
  if (order_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order_id, submessage_arena);
    }
    
  } else {
    
  }
  order_id_ = order_id;
  // @@protoc_insertion_point(field_set_allocated:proto.OrderProto.order_id)
}

// .proto.UUID author_id = 2;
inline bool OrderProto::has_author_id() const {
  return this != internal_default_instance() && author_id_ != NULL;
}
inline const ::proto::UUID& OrderProto::_internal_author_id() const {
  return *author_id_;
}
inline const ::proto::UUID& OrderProto::author_id() const {
  const ::proto::UUID* p = author_id_;
  // @@protoc_insertion_point(field_get:proto.OrderProto.author_id)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UUID*>(
      &::proto::_UUID_default_instance_);
}
inline ::proto::UUID* OrderProto::release_author_id() {
  // @@protoc_insertion_point(field_release:proto.OrderProto.author_id)
  
  ::proto::UUID* temp = author_id_;
  author_id_ = NULL;
  return temp;
}
inline ::proto::UUID* OrderProto::mutable_author_id() {
  
  if (author_id_ == NULL) {
    auto* p = CreateMaybeMessage<::proto::UUID>(GetArenaNoVirtual());
    author_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.OrderProto.author_id)
  return author_id_;
}
inline void OrderProto::set_allocated_author_id(::proto::UUID* author_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(author_id_);
  }
  if (author_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      author_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, author_id, submessage_arena);
    }
    
  } else {
    
  }
  author_id_ = author_id;
  // @@protoc_insertion_point(field_set_allocated:proto.OrderProto.author_id)
}

// string market = 3;
inline void OrderProto::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderProto::market() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.market)
  return market_.GetNoArena();
}
inline void OrderProto::set_market(const ::std::string& value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OrderProto.market)
}
#if LANG_CXX11
inline void OrderProto::set_market(::std::string&& value) {
  
  market_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OrderProto.market)
}
#endif
inline void OrderProto::set_market(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OrderProto.market)
}
inline void OrderProto::set_market(const char* value, size_t size) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OrderProto.market)
}
inline ::std::string* OrderProto::mutable_market() {
  
  // @@protoc_insertion_point(field_mutable:proto.OrderProto.market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderProto::release_market() {
  // @@protoc_insertion_point(field_release:proto.OrderProto.market)
  
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderProto::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    
  } else {
    
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:proto.OrderProto.market)
}

// .proto.MarketSideProto side = 4;
inline void OrderProto::clear_side() {
  side_ = 0;
}
inline ::proto::MarketSideProto OrderProto::side() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.side)
  return static_cast< ::proto::MarketSideProto >(side_);
}
inline void OrderProto::set_side(::proto::MarketSideProto value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderProto.side)
}

// uint64 price = 5;
inline void OrderProto::clear_price() {
  price_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderProto::price() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.price)
  return price_;
}
inline void OrderProto::set_price(::google::protobuf::uint64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderProto.price)
}

// uint64 size = 6;
inline void OrderProto::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderProto::size() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.size)
  return size_;
}
inline void OrderProto::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderProto.size)
}

// uint64 executed_amount = 7;
inline void OrderProto::clear_executed_amount() {
  executed_amount_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderProto::executed_amount() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.executed_amount)
  return executed_amount_;
}
inline void OrderProto::set_executed_amount(::google::protobuf::uint64 value) {
  
  executed_amount_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderProto.executed_amount)
}

// .proto.OrderProto.TypeProto type = 8;
inline void OrderProto::clear_type() {
  type_ = 0;
}
inline ::proto::OrderProto_TypeProto OrderProto::type() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.type)
  return static_cast< ::proto::OrderProto_TypeProto >(type_);
}
inline void OrderProto::set_type(::proto::OrderProto_TypeProto value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderProto.type)
}

// .proto.OrderProto.TimeInForceProto tif = 9;
inline void OrderProto::clear_tif() {
  tif_ = 0;
}
inline ::proto::OrderProto_TimeInForceProto OrderProto::tif() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.tif)
  return static_cast< ::proto::OrderProto_TimeInForceProto >(tif_);
}
inline void OrderProto::set_tif(::proto::OrderProto_TimeInForceProto value) {
  
  tif_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderProto.tif)
}

// .proto.OrderProto.StateProto state = 10;
inline void OrderProto::clear_state() {
  state_ = 0;
}
inline ::proto::OrderProto_StateProto OrderProto::state() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.state)
  return static_cast< ::proto::OrderProto_StateProto >(state_);
}
inline void OrderProto::set_state(::proto::OrderProto_StateProto value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderProto.state)
}

// string created_timestamp = 11;
inline void OrderProto::clear_created_timestamp() {
  created_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderProto::created_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.created_timestamp)
  return created_timestamp_.GetNoArena();
}
inline void OrderProto::set_created_timestamp(const ::std::string& value) {
  
  created_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OrderProto.created_timestamp)
}
#if LANG_CXX11
inline void OrderProto::set_created_timestamp(::std::string&& value) {
  
  created_timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OrderProto.created_timestamp)
}
#endif
inline void OrderProto::set_created_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  created_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OrderProto.created_timestamp)
}
inline void OrderProto::set_created_timestamp(const char* value, size_t size) {
  
  created_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OrderProto.created_timestamp)
}
inline ::std::string* OrderProto::mutable_created_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:proto.OrderProto.created_timestamp)
  return created_timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderProto::release_created_timestamp() {
  // @@protoc_insertion_point(field_release:proto.OrderProto.created_timestamp)
  
  return created_timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderProto::set_allocated_created_timestamp(::std::string* created_timestamp) {
  if (created_timestamp != NULL) {
    
  } else {
    
  }
  created_timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created_timestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.OrderProto.created_timestamp)
}

// string updated_timestamp = 12;
inline void OrderProto::clear_updated_timestamp() {
  updated_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderProto::updated_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.updated_timestamp)
  return updated_timestamp_.GetNoArena();
}
inline void OrderProto::set_updated_timestamp(const ::std::string& value) {
  
  updated_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OrderProto.updated_timestamp)
}
#if LANG_CXX11
inline void OrderProto::set_updated_timestamp(::std::string&& value) {
  
  updated_timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OrderProto.updated_timestamp)
}
#endif
inline void OrderProto::set_updated_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  updated_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OrderProto.updated_timestamp)
}
inline void OrderProto::set_updated_timestamp(const char* value, size_t size) {
  
  updated_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OrderProto.updated_timestamp)
}
inline ::std::string* OrderProto::mutable_updated_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:proto.OrderProto.updated_timestamp)
  return updated_timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderProto::release_updated_timestamp() {
  // @@protoc_insertion_point(field_release:proto.OrderProto.updated_timestamp)
  
  return updated_timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderProto::set_allocated_updated_timestamp(::std::string* updated_timestamp) {
  if (updated_timestamp != NULL) {
    
  } else {
    
  }
  updated_timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updated_timestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.OrderProto.updated_timestamp)
}

// string expiration_timestamp = 13;
inline void OrderProto::clear_expiration_timestamp() {
  expiration_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderProto::expiration_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.OrderProto.expiration_timestamp)
  return expiration_timestamp_.GetNoArena();
}
inline void OrderProto::set_expiration_timestamp(const ::std::string& value) {
  
  expiration_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OrderProto.expiration_timestamp)
}
#if LANG_CXX11
inline void OrderProto::set_expiration_timestamp(::std::string&& value) {
  
  expiration_timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OrderProto.expiration_timestamp)
}
#endif
inline void OrderProto::set_expiration_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  expiration_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OrderProto.expiration_timestamp)
}
inline void OrderProto::set_expiration_timestamp(const char* value, size_t size) {
  
  expiration_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OrderProto.expiration_timestamp)
}
inline ::std::string* OrderProto::mutable_expiration_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:proto.OrderProto.expiration_timestamp)
  return expiration_timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderProto::release_expiration_timestamp() {
  // @@protoc_insertion_point(field_release:proto.OrderProto.expiration_timestamp)
  
  return expiration_timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderProto::set_allocated_expiration_timestamp(::std::string* expiration_timestamp) {
  if (expiration_timestamp != NULL) {
    
  } else {
    
  }
  expiration_timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiration_timestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.OrderProto.expiration_timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::OrderProto_StateProto> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OrderProto_StateProto>() {
  return ::proto::OrderProto_StateProto_descriptor();
}
template <> struct is_proto_enum< ::proto::OrderProto_TypeProto> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OrderProto_TypeProto>() {
  return ::proto::OrderProto_TypeProto_descriptor();
}
template <> struct is_proto_enum< ::proto::OrderProto_TimeInForceProto> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OrderProto_TimeInForceProto>() {
  return ::proto::OrderProto_TimeInForceProto_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_order_2eproto
