// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: matcher.proto

#include "matcher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace proto {
}  // namespace proto
namespace protobuf_matcher_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "matcher.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmatcher.proto\022\005proto\032\014shared.proto\032\017or"
      "derbook.proto\032\013order.proto2\267\003\n\014MatcherPr"
      "oto\022D\n\014GetOrderBook\022\031.proto.MarketReques"
      "tProto\032\025.proto.OrderBookProto\"\0000\001\022F\n\017Get"
      "BestBidPrice\022\031.proto.MarketRequestProto\032"
      "\026.proto.PricePointProto\"\000\022F\n\017GetBestAskP"
      "rice\022\031.proto.MarketRequestProto\032\026.proto."
      "PricePointProto\"\000\022<\n\tGetSpread\022\031.proto.M"
      "arketRequestProto\032\022.proto.SpreadProto\"\000\022"
      "*\n\006Lookup\022\013.proto.UUID\032\021.proto.OrderProt"
      "o\"\000\0223\n\007Execute\022\021.proto.OrderProto\032\021.prot"
      "o.OrderProto\"\0000\001\0222\n\006Cancel\022\021.proto.Order"
      "Proto\032\021.proto.OrderProto\"\0000\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 516);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "matcher.proto", &protobuf_RegisterTypes);
  ::protobuf_shared_2eproto::AddDescriptors();
  ::protobuf_orderbook_2eproto::AddDescriptors();
  ::protobuf_order_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_matcher_2eproto
namespace proto {

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
